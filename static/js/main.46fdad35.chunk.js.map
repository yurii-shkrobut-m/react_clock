{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getCorrectTime","Date","toUTCString","slice","Clock","state","time","timerId","this","window","setInterval","setState","console","info","prevProps","prevName","name","props","debug","clearInterval","className","React","PureComponent","getRandomName","value","now","toString","App","clockName","hasClock","hideTime","event","preventDefault","showTime","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAEA,SAASA,IAGP,OAFc,IAAIC,MAELC,cAAcC,OAAO,IAAK,GAWlC,IAAMC,EAAb,4MACEC,MAAe,CACbC,KAAMN,KAFV,EAKEO,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,KAAMN,MAEtBY,QAAQC,KAAK,EAAKR,MAAMC,QACvB,OAZP,gCAeE,SAAmBQ,GACjB,IAAcC,EAAaD,EAAnBE,KACAA,EAASR,KAAKS,MAAdD,KAEJF,IAAcN,KAAKS,OAErBL,QAAQM,MAAR,uBAA8BH,EAA9B,eAA6CC,MArBnD,kCAyBE,WACEP,OAAOU,cAAcX,KAAKD,WA1B9B,oBA6BE,WACE,IAAQS,EAASR,KAAKS,MAAdD,KACAV,EAASE,KAAKH,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGd,WA1CX,GAA2Be,IAAMC,eCZjC,SAASC,IACP,IAAMC,EAAQvB,KAAKwB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAQX,IAAMG,EAAb,4MACEtB,MAAe,CACbuB,UAAW,UACXC,UAAU,GAHd,EAMEtB,QAAU,EANZ,EAuBEuB,SAAW,SAACC,GACVA,EAAMC,iBAEN,EAAKrB,SAAS,CAAEkB,UAAU,KA1B9B,EA6BEI,SAAW,SAACF,GACVA,EAAMC,iBAEN,EAAKrB,SAAS,CAAEkB,UAAU,KAhC9B,uDAQE,WAA2B,IAAD,OACxBrB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEiB,UAAWL,QAC1B,MAEHW,SAASC,iBAAiB,cAAe3B,KAAKsB,UAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,YAd5C,kCAiBE,WACExB,OAAOU,cAAcX,KAAKD,SAC1B2B,SAASE,oBAAoB,cAAe5B,KAAKsB,UACjDI,SAASE,oBAAoB,QAAS5B,KAAKyB,YApB/C,oBAmCE,WACE,MAAgCzB,KAAKH,MAA7BuB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECS,GACC,cAAC,EAAD,CACEb,KAAMY,WA5ClB,GAAyBP,IAAMC,eCZ/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.46fdad35.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getCorrectTime(): string {\n  const today = new Date();\n\n  return today.toUTCString().slice(-12, -4);\n}\n\ninterface Props {\n  name: string,\n}\n\ninterface State {\n  time: string,\n}\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state: State = {\n    time: getCorrectTime(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: getCorrectTime() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { name: prevName } = prevProps;\n    const { name } = this.props;\n\n    if (prevProps !== this.props) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.PureComponent {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.hideTime);\n    document.addEventListener('click', this.showTime);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.hideTime);\n    document.removeEventListener('click', this.showTime);\n  }\n\n  hideTime = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  showTime = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock\n            name={clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}